#!/bin/bash
#finish package takes a directory input created by restructureforCompliance and creates derivative access copies, metadata documents, and a checksum file.
SCRIPTDIR=$(dirname "${0}")
. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ;};
_initialize_make

while [ "${*}" != "" ] ; do
#look for tree.xml
    PACKAGE="${1}"
    shift
    if [ -d "${PACKAGE}" ] ; then
        OUTPUTDIR="${PACKAGE}/metadata"
        _report -dt "running finishpackage on ${PACKAGE}" #the name of the package being verified

        #make a new temp tree
        TEMPTREE=$(_maketemp)
        tree -DaNXs --du --timefmt "%Y-%m-%dT%H:%M:%SZ" -I "tree.xml|.DS_Store" "${PACKAGE}" > "${TEMPTREE}"
        #if tree.xml exists, compare it to the specified xpath expressions of an AIP

        #check number of object files
        OBJECTCOUNT="$(xmlstarlet sel -t -m "/tree/directory/directory[@name='objects']" -v "count(file)" -n "${TEMPTREE}")"
        #check extension of first object file
        FIRSTOBJECTEXTENSION="$(xmlstarlet sel -t -m "/tree/directory/directory[@name='objects']/file[1]" -v "substring-after(@name, '.')" -n  "${TEMPTREE}")"
        #if there is one object file and it uses a .wav extension, then run audio-specific tests 
        if [[ "${OBJECTCOUNT}" = 1 && "${FIRSTOBJECTEXTENSION}" = "wav" ]] ; then
            makederiv -T audiographs "${PACKAGE}"
        else
            makelossless "${PACKAGE}"
            makederiv -T broadcast "${PACKAGE}"
            makederiv -T youtube "${PACKAGE}"
            makeframes "${PACKAGE}"
            makefingerprint "${PACKAGE}"
        fi
        makederiv -T spectogram "${PACKAGE}"
        makederiv -T waveform "${PACKAGE}"
        makederiv -T podcast "${PACKAGE}"
        makederiv -T mp3 "${PACKAGE}"
        makemetadata "${PACKAGE}"
        checksumpackage "${PACKAGE}"
    fi
done
