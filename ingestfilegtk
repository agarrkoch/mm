#!/bin/bash
# ingestfile
# select an audiovisual file, package it, and transcode it

VERSION="1.0"
QUEUEFILE="${HOME}/Desktop/queue.txt"
SCRIPTDIR=$(dirname "${0}")
. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ;};
_initialize_make


AUDIODECISION_OPTIONS=("Default audio mapping [first audio track used for stereo output]" "Default audio mapping [first audio track used for stereo output]" "Only use left of the first audio track [for 21st Century]" "Only use right of the first audio track" "Only use the first track" "")
CROPDECISION_OPTIONS=("Do not crop" "Examine the video and auto-crop out black borders (slower)" "")
SLATE_OPTIONS=("No" "Yes" "")
FORMULA_OPTIONS=("None" "Check interlacement" "tff" "bff" "hds" "sds" "")
CLEANUPDECISION_OPTIONS=("Leave source file where it is" "Remove source file after successful ingest" "")
PRIORITY_OPTIONS=("Put in queue" "Start now")

funcFileSelect() {
    FILE_VAR_NAME="${1}"
    FILE_VAR_VALUE="${!1}"
    FILE_LABEL="${2}"
    if [[ -n "${FILE_VAR_VALUE}" ]] ; then
      FILE_DEFAULT="<default>${FILE_VAR_VALUE}</default>"
    fi
    cat << GTKFILE
    <vbox>
    	<text xalign="0">
    		<label>"${FILE_LABEL}"</label>
    	</text>
    	<hbox>
      		<entry accept="file" fs-entry="Select a File">
          		${FILE_DEFAULT}
       	  		<variable>${FILE_VAR_NAME}</variable>
      		</entry>
      		<button>
        		<input file stock="gtk-open"></input>
         		<variable>FILEBROWSE</variable>
        		<action type="fileselect">${FILE_VAR_NAME}</action>
      		</button>
    	</hbox>
    </vbox>
GTKFILE
}

funcDirectory() {
    DIR_VAR_NAME="${1}"
    DIR_VAR_VALUE="${!1}"
    DIR_LABEL="${2}"
    if [[ -n "${DIR_VAR_VALUE}" ]] ; then
      DIR_DEFAULT="<default>${DIR_VAR_VALUE}</default>"
    fi
    cat << GTKDIR
<vbox>
    <text xalign="0">
      <label>"${DIR_LABEL}"</label>
    </text>
    <hbox>
        <entry accept="directory" fs-entry="Select a Directory">
            ${DIR_DEFAULT}
            <variable>${DIR_VAR_NAME}</variable>
        </entry>
        <button>
            <input file stock="gtk-open"></input>
            <variable export="false">DIRBROWSE</variable>
            <action type="fileselect">${DIR_VAR_NAME}</action>
        </button>
    </hbox>
</vbox>
GTKDIR
}


funcEntry(){
  ENTRY_VAR_NAME="${1}"
  ENTRY_VAR_VALUE="${!1}"
  ENTRY_LABEL="${2}"
  if [[ -n "${ENTRY_VAR_VALUE}" ]] ;
  then ENTRY_DEFAULT="<default>${ENTRY_VAR_VALUE}</default>"
  fi
  cat << GTKENTRY
<vbox>
  <text wrap="true" width-chars="80" xalign="0">
    <label>${ENTRY_LABEL}</label>
  </text>
  <entry>
    <variable>${ENTRY_VAR_NAME}</variable>
    ${ENTRY_DEFAULT}
    </entry>
</vbox>
GTKENTRY
}

_get_index_of_value(){
  # run with function, value to look for as first argument, and array to look in as 2nd argument, such function as
  # _get_index_of_value "${VIDEO_INPUT_CHOICE}" "${VIDEO_INPUT_OPTIONS[@]}"
  VALUE="${1}"
  shift
  LIST=( "$@" )
  INDEX=0
  MATCH=""
  for ITEM in "${LIST[@]}" ; do
    if [[ "${VALUE}" = "${ITEM}" ]] ; then
      MATCH="$INDEX"
    fi
    (( ++INDEX ))
  done
    if [[ -n "${MATCH}" ]] ; then
      echo -n "${MATCH}"
    fi
}

_expand_list2items(){
  LIST=( "$@" )
    for i in "${LIST[@]}" ; do
      echo "<item>${i}</item>"
    done
}

funcCombo(){
    VARIABLE_NAME="${1}"
    WIDTH="${2}"
    LABEL="${3}"
    shift 3
    OPTION_LIST=("${@}")
    SELECTION="$(_get_index_of_value "${!VARIABLE_NAME}" "${OPTION_LIST[@]}")"
    LIST="$(_expand_list2items "${OPTION_LIST[@]}")"
    DEFAULT="${OPTION_LIST[0]}"
    cat << GTKCOMBO
    <hbox space-expand="true" space-fill="true">
      <text xalign="0">
          <label>${LABEL}</label>
      </text>
      <comboboxtext width-chars="${WIDTH}" xalign="0" allow-empty="false" value-in-list="true" button-sensitivity="1" focus-on-click="false" selection-mode="1" selected-row="${SELECTION}" >
          <variable>${VARIABLE_NAME}</variable>
          <default>${DEFAULT}</default>
          ${LIST}
      </comboboxtext>
    </hbox>
GTKCOMBO
}

_validate_ingestfile(){
  #mediaID validation
  echo `date`
}


MAIN_DIALOG=$(cat << MAINFORM
	<window title="ingestfile" resizable="false" window_position="1">
		<vbox>
			<text>
				<label>Ingest file options.</label>
			</text>
			<frame>
				$(funcEntry OP "Please enter your name")
				$(funcEntry MEDIAID "Please enter a unique MEDIA ID (capital letters, numbers, hyphens and underscores only).")
				<frame Select a file for one input; a directory for more than one input>
          $(funcFileSelect INPUTFILE "Select a file:")
          $(funcDirectory INPUTDIR "Select a directory containing more than one video file:")
        </frame>
        $(funcCombo AUDIODECISION "60" "Select an audio strategy" "${AUDIODECISION_OPTIONS[@]}")
        $(funcCombo CROPDECISION "60" "Select a cropping strategy:" "${CROPDECISION_OPTIONS[@]}")
        <frame>
          $(funcCombo SLATE "60" "Do you want to create a service copy with a slate?" "${SLATE_OPTIONS[@]}")
          $(funcEntry SERIESTITLE "If adding slate, please enter a series title:")
          $(funcEntry EPISODETITLE "If adding slate, please enter an episode title:")
        </frame>
        $(funcCombo FORMULA "60" "Select a formula for unusual cases (optional)" "${FORMULA_OPTIONS[@]}")
        $(funcCombo CLEANUPDECISION "60" "Select a cleanup strategy" "${CLEANUPDECISION_OPTIONS[@]}")
        $(funcCombo PRIORITY "60" "Would you like to put it in the queue or start now?" "${PRIORITY_OPTIONS[@]}")
        $(funcEntry INTIME_ENTRY "Enter the in-point of the video (optional; in hh:mm:ss.ms)")
        $(funcEntry OUTTIME_ENTRY "Enter the out-point of the video (optional; in hh:mm:ss.ms")
			</frame>
      <hbox>
        <text>
          <label>Errors & Warnings:</label>
        </text>
        <vbox scrollable="true" height="28">
          <text wrap="true" xalign="0">
            <variable export="false">INGESTFILE_FORM_VALIDATION</variable>
            <input>sh ~/Desktop/_validate_ingestfile.sh</input>
          </text>
        </vbox>
      </hbox>
      <hbox>
        <button ok></button>
        <button cancel></button>
      </hbox>
		</vbox>
    <action signal="show" type="refresh">INGESTFILE_FORM_VALIDATION</action>
    <action signal="enter-notify-event" type="refresh">INGESTFILE_FORM_VALIDATION</action>
    <action signal="leave-notify-event" type="refresh">INGESTFILE_FORM_VALIDATION</action>
	</window>
MAINFORM
)
export MAIN_DIALOG

#echo "$MAIN_DIALOG" | mate
#eval "$(gtkdialog --program=MAIN_DIALOG)"

#if [[ "${TERMINAL_MODE}" == "N" ]] ; then
eval "$(gtkdialog --program=MAIN_DIALOG)"
#fi
if [[ "${EXIT}" = "abort" ]] ;  then
  exit 0
elif [[ "${EXIT}" = "Cancel" ]] ; then
  exit 0
elif [[ "${EXIT}" = "OK" ]] ; then
  echo " OPERATOR = ${OP}"
  echo " INPUTFILE = ${INPUTFILE}"
  echo " INPUTDIR = ${INPUTDIR}"
  echo " MEDIAID = ${MEDIAID}"
  echo " AUDIODECISION = ${AUDIODECISION}"
  echo " CROPDECISION = ${CROPDECISION}"
  echo " SLATE = ${SLATE}"
  echo " SERIESTITLE = ${SERIESTITLE}"
  echo " EPISODETITLE = ${EPISODETITLE}"
  echo " FORMULA = ${FORMULA}"
  echo " CLEANUPDECISION = ${CLEANUPDECISION}"
  echo " PRIORITY = ${PRIORITY}"
  echo ""
fi

if [ -f "${INPUTFILE}" ] && [ ! -d "${INPUTDIR}" ] ; then
  INPUT="${INPUTFILE}"
  rm ${INPUTFILE}
  rm ${INPUTDIR}
elif [ ! -f "${INPUTFILE}" ] && [ -d "${INPUTDIR}" ] ; then
  INPUT="${INPUTDIR}"
  rm ${INPUTFILE}
  rm ${INPUTDIR}
fi
