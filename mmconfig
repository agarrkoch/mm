#!/usr/bin/env bash
# mmconfig
# set up variables for microservices, has option for a graphical user interface
CONFIG="Y"
SCRIPTDIR=$(dirname "${0}")
. "${SCRIPTDIR}/mmfunctions" || { echo "Missing '${SCRIPTDIR}/mmfunctions'. Exiting." ; exit 1 ;};

funcrdoCreate() {
  RDO_VAR_NAME="${1}"
  RDO_NAME="${2}"
  cat <<GTK_RAD
<label>${RDO_NAME}</label>
  <variable>${RDO_VAR_NAME}</variable>
</radiobutton>
GTK_RAD
}

funcDirectory() {
    DIR_VAR_NAME="${1}"
    DIR_VAR_VALUE="${!1}"
    if [[ -n "${DIR_VAR_VALUE}" ]] ; then 
      DIR_DEFAULT="<default>${DIR_VAR_VALUE}</default>"
    fi
    cat << GTK_PART
<frame ${DIR_VAR_NAME}>
    <hbox>
        <entry accept="directory" fs-entry="Select a Directory">
            ${DIR_DEFAULT}
            <variable>${DIR_VAR_NAME}</variable>
        </entry>
        <button>
            <input file stock="gtk-open"></input>
            <variable>DIRBROWSE</variable>
            <action type="fileselect">${DIR_VAR_NAME}</action>
        </button>
    </hbox>
</frame>
GTK_PART
}

funcEntry(){
  ENTRY_VAR_NAME="${1}"
  ENTRY_VAR_VALUE="${!1}"
  ENTRY_LABEL="${2}"
  ENTRY_WIDTH="${3}"
  if [[ -n "${ENTRY_VAR_VALUE}" ]] ; then
    ENTRY_DEFAULT="<default>${ENTRY_VAR_VALUE}</default>"
  fi
  cat << GTK_ENTRY
<vbox>
  <text wrap="true" width-chars="${ENTRY_WIDTH}" xalign="0">
    <label>${ENTRY_LABEL}</label>
  </text>
  <entry>
    <variable>${ENTRY_VAR_NAME}</variable>
    ${ENTRY_DEFAULT}
    </entry>
</vbox>
GTK_ENTRY
}


export MAIN_DIALOG=$(cat << MAIN_FORM
  <window title="mmconfig configuration" resizable="false" window_position="1">
    <vbox>
      <text>
        <label>Set up mmconfig variables</label>
      </text>
      <frame Navigate to and select the directories you have created>
        <hbox>
          $(funcDirectory OUTDIR_INGESTFILE)
          $(funcDirectory OUTDIR_INGESTXDCAM)
          $(funcDirectory OUTDIR_PAPER)
          $(funcDirectory AIP_STORAGE)
          $(funcDirectory PODCASTDELIVER)
        </hbox>
        <hbox>
          $(funcDirectory YOUTUBEDELIVER)
          $(funcDirectory TMPDIR)
          $(funcDirectory CUSTOM_LOG_DIR)
          $(funcDirectory LTO_INDEX_DIR)
          $(funcDirectory LOCAL_MM_DIR)
        </hbox>
      </frame>
      <frame>
        <hbox homogeneous="true">
          $(funcEntry REGEX4PODCAST "Enter the regular expression you would like to use to determine if a file qualifies for podcast:" "80")
          $(funcEntry REGEX4IA "Enter the regular expression you would like to use to upload to the Internet Archive:" "80")
        </hbox>
        <hbox homogeneous="true">
          $(funcEntry OMNEONIP "Please enter the IP address for the server where you would like assets to be delivered:" "80")
          $(funcEntry OMNEONPATH "Please enter the file path for the server where you would like assets to be delivered:" "80")
        </hbox> 
        <hbox homogeneous="true">
          $(funcEntry LTO_MD5_FLAGS "Please select the flags you would like md5deep to use (ex: md5deep -rel):" "80")
          $(funcEntry FILE_MAKER_DB "Please enter the name of the filemaker database:" "80")
        </hbox>
        <hbox space-fill="false">
          <text wrap="false" width-chars="60" xalign="0">
            <label>Please choose Y or N to test and adjust volume during transcoding:</label>
          </text>
          <vbox>
            <radiobutton>
              $(funcrdoCreate VOLADJUSTY "Y")
            <radiobutton active="true">
              $(funcrdoCreate VOLADJUSTN "N")
          </vbox>
          $(funcEntry DVDLABELPREFIX "Please enter the prefix you would like added to the filename in makedvd. You may leave this blank:" "80")
        </hbox>
        <hbox space-expand="true">
          <text>
            <label>Please choose Y or N to enable database logging:</label>
          </text>
          <vbox>
            <radiobutton>
              <action>if true enable:PREMIS_PROFILE</action>
              <action>if true enable:PREMIS_NAME</action>
              $(funcrdoCreate PREMIS_DBY "Y")
            <radiobutton active="true">
              <action>if true disable:PREMIS_PROFILE</action>
              <action>if true disable:PREMIS_NAME</action>
              $(funcrdoCreate PREMIS_DBN "N")
          </vbox>
          $(funcEntry PREMIS_PROFILE "Enter the name of the database profile:" "60")
          $(funcEntry PREMIS_NAME "Enter the name of the database:" "60")
        </hbox>
        <hbox>
          <checkbox>
            <label>Auto update MySQL .plist?</label>
            <variable>PREMIS_PLIST</variable>
          </checkbox>
          <checkbox>
            <label>Generate video fingerprint?</label>
            <variable>PERCEPTUAL_HASH</variable>
          </checkbox>
        </hbox>
      </frame>
      <frame Email Settings>
        <hbox homogeneous="true">
          $(funcEntry EMAIL_FROM "Please enter the email account that notifications will be sent from:" "80")
          $(funcEntry SQL_ERROR_EMAIL_TO "Please the email account for the delivery of SQL Error Reports:" "80")
        </hbox>
        <hbox homogeneous="true">
          $(funcEntry MAKEBROADCAST_DELIVERY_EMAIL_TO "Please enter the email account (or multiple accounts separated by a comma) makebroadcast notifications will be delivered to:" "80")
          $(funcEntry MAKEYOUTUBE_DELIVERY_EMAIL_TO "Please enter the email account (or multiple accounts separated by a comma) makeyoutube notifications will be delivered to:" "80")
        </hbox>
      </frame>
      <hbox>
        <button ok></button>
        <button cancel></button>
      </hbox>
   </vbox>
  </window>
MAIN_FORM
)

GTK_OUTPUT="$(gtkdialog --program=MAIN_DIALOG | sort)"
if [[ "$GTK_OUTPUT" == *'EXIT="OK"'* ]]; then
  echo "${GTK_OUTPUT}" | sed 's:VOLADJUSTY="true":VOLADJUST="Y":g;s:VOLADJUST[YN]="false"::g;s:VOLADJUSTN="true":VOLADJUST="N":g;s:PREMIS_DBY="true":PREMIS_DB="Y":g;s:PREMIS_DB[YN]="false"::g;s:PREMIS_DBN="true":PREMIS_DB="N":g;s:EXIT="OK"::g' | sort > "${MM_CONFIG_FILE}"
  echo "${MM_CONFIG_FILE}"
fi
